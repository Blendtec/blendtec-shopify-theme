<div class="compare-blender">
<script>
  var standardize_cell_size = function(){};
</script>

<div style="display:none;" onclick="exitPopup()" id="popupBackground"></div>
<div id="thePopup" style="display:none;">
<button onclick="exitPopup()" type="button" id="exitButton" class="close product-comparison--close" data-dismiss="modal" aria-hidden="true" style="
    background: transparent;
    padding: 0;
    border: 0;
    position:absolute;
    cursor:pointer;
    right:10px;
    top:10px;
">
<i class="bt-icon-action svg product-comparison--icon-close">
  <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1024 1024" enable-background="new 0 0 1024 1024" xml:space="preserve" style="
    width: 25px;
    height: 25px;
">
  <circle id="circle" fill="none" stroke="none" stroke-width="10" stroke-miterlimit="10" cx="512" cy="511.1" r="503.9" style="
    stroke-dasharray: 0;
    stroke-width: 57;
    stroke: #fff;
">
  </circle>
  <path id="arrow" fill="none" d="M421.5,206.3l-72.7,72.7L587.7,518L348.8,756.9l72.7,72.7L733.1,518
    L421.5,206.3z"></path>
  <polygon id="plus" fill="none" points="827.7,472.4 552,472.4 552,196.7 473.2,196.7 473.2,472.4 197.5,472.4 197.5,551.1
    473.2,551.1 473.2,826.8 552,826.8 552,551.1 827.7,551.1 "></polygon>
  <rect id="minus" x="197.5" y="472.4" fill="none" width="630.2" height="78.8">
  </rect>
  <polygon id="close" fill="none" points="762.2,706.7 567.3,511.8 762.2,316.8 706.5,261.1 511.6,456.1 316.6,261.1 261,316.8
  455.9,511.7 261,706.7 316.7,762.4 511.6,567.4 706.6,762.4 " style="
    fill: #fff;
"></polygon>
  </svg>

  <div class="svg-action-icon-alternate"></div>
</i>        </button>

<div>
  <img id="zoomInProduct" style="width:100%;">
</div>
<div>
  <img id="zoomInPanel" style="width:100%;">
</div>
<div>

</div>
</div>

<div class="full-width layout wrap product-comparison--bg-image">
      <div class="row-fluid top-level head-image">
        <div class="col-md-12 product-comparison--header-container">
          <h1 class="product-comparison--leader">{{ section.settings.product_compare_title }}</h1>
          <h2 class="product-comparison--sub-leader">{{ section.settings.product_compare_title_2 }}</h2>
        </div>
      </div>
    </div>

<div style="max-width:80rem;margin:0 auto;">
<h3 style="margin-left:20%;margin-top:50px;">{{ section.settings.product_row_1_title }}</h3>



<div class="grid product-table" style="margin-left:0px;">

  {% for i in section.blocks %}
    {% if i.type == 'products-1' %}
      {% assign product_name = i.settings.product_id | text  %}
      {% include 'product-to-compare' %}
    {% endif %}
  {% endfor %}
</div>



<h3 style="margin-left:20%;">{{ section.settings.product_row_2_title }}</h3>

<div class="grid product-table" style="margin-left:0px;">

  {% for i in section.blocks %}
    {% if i.type == 'products-2' %}
      {% assign product_name = i.settings.product_id | text  %}
      {% include 'product-to-compare' %}
    {% endif %}
  {% endfor %}
</div>


</div>
</div>
<script type="text/javascript">
(function(){
  var colorSection = document.getElementsByClassName('make-same-size-colors');
  var tallestSection = 0;
  for (var i = 0; i < colorSection.length; i++) {
    if (colorSection[i].offsetHeight  > tallestSection) {
      tallestSection = colorSection[i].offsetHeight;
    }
  }
  for (var i = 0; i < colorSection.length; i++) {
    colorSection[i].style.height = tallestSection+'px';
  }
})();

  var changeVisible =  function(variantObj) {
    document.getElementById('productImage-'+variantObj.productId).src = variantObj.src;
    document.getElementById('productSecondaryTitle-'+variantObj.productId).innerHTML = variantObj.title;
    document.getElementById('productPrice-'+variantObj.productId).innerHTML = variantObj.price;
    var links = document.getElementsByClassName('product-link-'+variantObj.productId);
    for (var i in links) {
      links[i].href = variantObj.url+'?variant='+variantObj.variantId;
    }
  }

  var selectOption1 = function(color, product) {
    var index = productSelectedVariant[product];
    var jar = variantToOptions[index].jar;
    for (var i in variantToOptions) {
      if (variantToOptions[i].jar === jar && variantToOptions[i].color === color && variantToOptions[i].productId === product) {
        productSelectedVariant[product] = i;
      }
    }
    changeVisible(variantToOptions[productSelectedVariant[product]]);
  };

  var selectOption2 = function(jar, product) {
    var index = productSelectedVariant[product];
    var color = variantToOptions[index].color;
    for (var i in variantToOptions) {
      if (variantToOptions[i].jar === jar && variantToOptions[i].color === color && variantToOptions[i].productId === product) {
        productSelectedVariant[product] = i;
      }
    }
    changeVisible(variantToOptions[productSelectedVariant[product]]);
  };

  var getHeightOfEachCell = function(obj, output, highest) {
    for (var i in obj['childNodes']) {
      if (obj['childNodes'][i].classList && obj['childNodes'][i].classList.contains('cell')) {
        obj['childNodes'][i].style.height = null;
        output.push(obj['childNodes'][i].offsetHeight);
        if (!highest[output.length-1] || (highest[output.length-1] && output[output.length - 1] > highest[output.length-1]) ) {
          highest[output.length-1] = output[output.length - 1];
        }
      }
      if (obj['childNodes'][i].childNodes) {
        getHeightOfEachCell(obj['childNodes'][i], output, highest);
      }
    }
  };

  var setCellHeight = function(obj, highest) {
    for (var i in obj['childNodes']) {
      if (obj['childNodes'][i].classList && obj['childNodes'][i].classList.contains('cell')) {
        var height = highest.shift();
        obj['childNodes'][i].style.height = height+'px';
      }
      if (obj['childNodes'][i].childNodes) {
        setCellHeight(obj['childNodes'][i], highest);
      }
    }
  };

  var setCellHeightByGridItem = function (grid, highest) {
    for (var i in grid['childNodes']) {
      if (grid['childNodes'][i] && grid['childNodes'][i].classList && grid['childNodes'][i].classList.contains('grid__item')) {
        var tempHighest = highest.slice();
        setCellHeight(grid['childNodes'][i], tempHighest);
      }
    }
  }

  var getTallestHeight = function(grid) {
    var highest = [];
    for (var i in grid['childNodes']) {
      if (grid['childNodes'][i] && grid['childNodes'][i].classList && grid['childNodes'][i].classList.contains('grid__item')) {
        getHeightOfEachCell(grid['childNodes'][i], [], highest);
      }
    }
    return highest;
  };

  var standardize_cell_size = function() {
    var grids = document.getElementsByClassName('grid');
    for (var i = 0; i < grids.length; i++) {
      var arrOfHeights = [];
      var highest = getTallestHeight(grids[i]);
      setCellHeightByGridItem(grids[i], highest);
    }
  };

  var makeOnlyLeftMostInfoVisible = function() {
    var sections = document.getElementsByClassName('blender-info-side');
    for (var i in sections) {
      if (sections[i] && sections[i].style) {
          sections[i].style.display = null;
          var parentLeftDiff = sections[i].parentElement.offsetLeft;
        if (sections[i].offsetLeft - parentLeftDiff > 25) {
          sections[i].style.display = 'none';
        } else {
          sections[i].style.display = null;
        }
      }
    }
  };

  var zoomin = function(product) {
    var index = productSelectedVariant[product];

    document.getElementById('popupBackground').style.display = null;
    document.getElementById('thePopup').style.display = null;
    document.getElementById('zoomInProduct').src = variantToOptions[index].src;
    document.getElementById('zoomInPanel').src = variantToOptions[index].panel;
  };

  var exitPopup = function() {
    document.getElementById('popupBackground').style.display = 'none';
    document.getElementById('thePopup').style.display = 'none';
  };

standardize_cell_size();
makeOnlyLeftMostInfoVisible();
window.addEventListener("resize", function() {
 standardize_cell_size();
 makeOnlyLeftMostInfoVisible();
});
</script>
<style>
  .product-comparison--bg-image{
    background-image: url('{{ section.settings.top_image | img_url: '1000x' }}}');
  }
</style>
  {{ 'product-compare.scss.css' | asset_url | stylesheet_tag }}

{% schema %}
{
"name":"bt-compare-products",
"class":"bt-compare-products",
"max_blocks":20,
"settings":[
{
"type":"text",
"id":"product_compare_title",
"label":"Product Compare Title",
"default":"COMPARE AVAILABLE MODELS"
},
{
"type":"text",
"id":"product_compare_title_2",
"label":"Product Compare Title Secondary",
"default":"FIND THE ONE THAT'S RIGHT FOR YOU"
},
{
"type":"image_picker",
"id":"top_image",
"label":"Top Image"
},
{
"type":"text",
"id":"product_row_1_title",
"label":"Product Row 1 Title",
"default":"Products"
},
{
"type":"text",
"id":"product_row_2_title",
"label":"Product Row 2 Title",
"default":"Certified Refurbished"
}
],
"blocks":[
{
"type":"products-1",
"name":"compare-product-1",
"settings":[
{
"type":"text",
"id":"product_id",
"label":"Product Id",
"info":"Name of product you want to display. So for the url 'https://blendtec.myshopify.com/products/classic-575' what you want to input is 'classic-575'."
}
]
},
{
"type":"products-2",
"name":"compare-product-2",
"settings":[
{
"type":"text",
"id":"product_id",
"label":"Product Id",
"info":"Name of product you want to display. So for the url 'https://blendtec.myshopify.com/products/classic-575' what you want to input is 'classic-575'."
}
]
}
],
    "presets": [
      {
        "name": "compare-blender",
        "category": "Image"
      }
    ]
}
{% endschema %}