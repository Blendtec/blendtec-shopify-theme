/**
 * Product page
 */
 window.ira = window.ira || {};
 window.bt_product = window.bt_product || {};

// TODO Dedupe
ira.cacheSelectors = function () {
  ira.cache = {
    // General
    $window                  : $(window),
    $html                    : $('html'),
    $body                    : $('body'),
    windowHeight             : $(window).height(),

    // Navigation
    $navigation              : $('#AccessibleNav'),
    $mobileSubNavToggle      : $('.mobile-nav__has-sublist'),
    $header                  : $('.site-header'),
    $headerControls          : $('.site-header-controls'),
    $headerCurrencyConverter : $('.header-message-currency'),

    // Drawers
    $allDrawers                 : $('.drawer'),

    // Collection Pages
    $changeView              : $('.change-view'),

    // Product Page
    $productImage            : $('#ProductPhotoImg'),
    $thumbImages             : $('#ProductThumbs').find('[data-product-thumbnail]'),
    $photoContainer          : $('#PhotoContent'),
    $productSidebar          : $('#sidebarColumn'),

    // Customer Pages
    $recoverPasswordLink     : $('#RecoverPassword'),
    $hideRecoverPasswordLink : $('#HideRecoverPasswordLink'),
    $recoverPasswordForm     : $('#RecoverPasswordForm'),
    $customerLoginForm       : $('#CustomerLoginForm'),
    $passwordResetSuccess    : $('#ResetSuccess'),


    //Exit intent / misc
    $exitIntentOverlay      :  $('.exit-intent-overlay'),
    $notificationBar        :  $('#notification-bar'),
    $fadeOutOverlay         :  $('.fadeout-overlay'),
    $searchBar              :  $('#HeaderSearchBar'),
    $pageContainer          :  $("#PageContainer"),

    // Footer
    $footer                 :  $('#shopify-section-footer')
  };
};

bt_product.init = function() {
  ira.productSidebar();
  ira.productImageSwitch();
  $('body').trigger('bt:product:ready');
}

bt_product.enableTabs = function (el) {
  $(el).each(function(){
    var active, content, links = $(this).find('a');
    active = links.first().addClass('active');
    content = $(active.attr('href'));
    
    links.not(':first').each(function () {
      $($(this).attr('href')).hide();
    });

    $(this).find('a').click(function(e){
      $(el).find('li').removeClass('selected');
      $(this).parent().addClass('selected');
      active.removeClass('active');
      content.hide();
      active = $(this);
      content = $($(this).attr('href'));
      active.addClass('active');
      content.show();
      return false;
    });
  });
};

bt_product.changeColor = function (color, text, id) {
  $('#productSelect-option-0').val(text).change();
  $('#color-options > .option').removeClass('selected');
  $('#'+id).addClass('selected');
  $('#colorTitle').text(text);
};

//TODO decouple from page 
bt_product.changeJar = function (jar, text, id) {
  $('#productSelect-option-1').val(text).change();
  $('#jar-options > .option').removeClass('selected');
  $('#'+id).addClass('selected');
  $('#jarTitle').text(text);
};

//TODO decouple from page 
bt_product.changeQuantity = function (el) {
  $('#Quantity').val($(el).val());
};

ira.switchImage = function (src, imgObject, el, scroll, position) {
  if (scroll) {
    var offset = $('[data-sticky-header="true"]').length ? $('[data-sticky-header]').height() - 1 : 0,
        bodyTop = $(document.body)[0].getBoundingClientRect().top,
        imageTop = $('#ProductPhotoImg-' + position)[0].getBoundingClientRect().top;

    var distance = Math.ceil(imageTop - bodyTop - offset);

    $("body, html").animate({
      scrollTop: distance + 'px'
    }, 300);
  } else {
    // Make sure element is a jquery object
    var $el = $(el);
    $el.attr('src', src);
  }
};

ira.productImageSwitch = function () {
  var $thumbImages = $('#ProductThumbs').find('[data-product-thumbnail]');
  if ($thumbImages.length) {
    // Switch the main image with one of the thumbnails
    // Note: this does not change the variant selected, just the image
    $thumbImages.on('click focus', function(evt) {
      evt.preventDefault();
      evt.stopPropagation();
      var newImage = $(this).children('img').data('high-res');
      ira.switchImage(newImage, null, $('#ProductPhotoImg'));
    });
  }
};

ira.productSidebar = function () {
  var photoContainer = ira.cache.$photoContainer;
  var sidebar = ira.cache.$productSidebar;
  var sidebarInner = sidebar.children('.sidebarColumn-inner');

  var stickyEnabled = sidebar.hasClass('sticky-sidebar');

  if (!stickyEnabled || ira.isIOS) return;

  var offsetStickyHeader = ira.cache.$header.hasClass('sticky-header');

  if (offsetStickyHeader) {
    sidebar.addClass('has-sticky-header')
  };

  $(window).on('resize scroll tab-changed tab-extended', function() {
    if (photoContainer.outerHeight() === sidebarInner.outerHeight() + 40) return;

    var inactive = true;

    var scrollTop = $(document).scrollTop();
    var headerOuterHeight = ira.cache.$header.outerHeight();
    var stickyHeaderOffset = offsetStickyHeader ? headerOuterHeight : 0;

    // +/- 1px to account for borders and pixel rounding
    var sidebarSpec = {
      outerWidth: sidebar.outerWidth() + 1,
      outerHeight: sidebar.outerHeight(),
      outerTop: sidebar.offset().top - 1,
      innerHeight: sidebarInner.outerHeight(),
      scrollHeight: scrollTop + window.innerHeight
    };

    var criteria = {
      widthMet: window.innerWidth > 840,
      topScrolled: scrollTop > sidebarSpec.outerTop - stickyHeaderOffset,
      heightExceeded: sidebarSpec.innerHeight + stickyHeaderOffset > window.innerHeight,
      pastSidebarBottom: sidebarSpec.scrollHeight > sidebarSpec.outerTop + sidebarSpec.innerHeight + (sidebar.hasClass('sticky-bottom') ? 0 : 40),
      pastFooterTopOutsideHeight: sidebarSpec.scrollHeight > sidebarSpec.outerTop + sidebarSpec.outerHeight,
      pastFooterTopInsideHeight: scrollTop + sidebarSpec.innerHeight + stickyHeaderOffset > sidebarSpec.outerTop + sidebarSpec.outerHeight
    };

    if (criteria.widthMet && criteria.topScrolled) {
      sidebarInner.css('width', sidebarSpec.outerWidth);

      if ((criteria.heightExceeded && criteria.pastFooterTopOutsideHeight) || (!criteria.heightExceeded && criteria.pastFooterTopInsideHeight)) {
        sidebar.removeClass('sticky-bottom sticky-top');
        sidebar.addClass('stuck');
        inactive = false;
      } else if (!criteria.heightExceeded) {
        sidebar.removeClass('stuck sticky-bottom');
        sidebar.addClass('sticky-top');
        inactive = false;
      } else if (criteria.heightExceeded && criteria.pastSidebarBottom) {
        sidebar.removeClass('stuck sticky-top');
        sidebar.addClass('sticky-bottom');
        inactive = false;
      };
    };

    if (inactive) {
      sidebar.removeClass('sticky-top sticky-bottom stuck');
      sidebarInner.css('width', 'auto');
    };
  }).trigger('resize');
};


ira.productPage = function (options) {
  var moneyFormat = options.money_format,
      defaultCurrency = options.default_currency,
      variant = options.variant,
      selector = options.selector;

  // Selectors
  var $productImage = $('#ProductPhotoImg'),
      $addToCart = $('#AddToCart'),
      $productPrice = $('#ProductPrice'),
      $comparePrice = $('#ComparePrice'),
      $quantityElements = $('.quantity-selector, label + .js-qty'),
      $addToCartText = $('#AddToCartText');

  if (variant) {

    // Update variant image, if one is set
    if (variant.featured_image) {
      var newImg = variant.featured_image,
          el = $productImage[0];

      //Scroll to the variant image
      //This handles the non-mobile view only.  Mobile view is handled
      //on that page, as it's carousel specific code.
      // var target = $('#'+variant.id);

      // console.log('TARGET:', variant.id);


      //Gets the $('#id') to select
      //By getting the FIRST one which has a matching variant
      //the [data-variant-id] attribute (which can be an array);
      var target = (function(){
        var selectedID;

        $('[data-variant-id]').each(function(i, e){
          if (typeof selectedID !== 'undefined') return false;
          //treat data-variant-id like an array.
          var variantIDs = $(e).attr('data-variant-id').split('-');

          for (var i = 0; i <= variantIDs.length; i++) {
            if (variantIDs[i] == variant.id){
              selectedID = $(e).attr('id');
              break;
            }
          };
        });

        return $('#' + selectedID);
      })();

      //If the variant's featured image is not-null, but the image doesn't
      //exist in the page, it means it's the default image at the top.
      if (!target.length){
        target = $('#ProductPhotoImg');
      }


      if (target.length && $(window).width() > 841){
        $('#PhotoContent').animate({

            scrollTop: $('#PhotoContent').scrollTop() + target.position().top
          }, 500);
      }
    }

    // Select a valid variant if available
    if (variant.available) {
      // Available, enable the submit button, change text, show quantity elements
      $addToCart.removeClass('disabled').prop('disabled', false);
      $addToCartText.html({{ 'products.product.add_to_cart' | t | json }});
      $quantityElements.show();
    } else {
      // Sold out, disable the submit button, change text, hide quantity elements
      $addToCart.addClass('disabled').prop('disabled', true);
      $addToCartText.html({{ 'products.product.sold_out' | t | json }});
      $quantityElements.hide();
    }

    var formattablePrices = {
      regular: variant.price,
      compare_at: variant.compare_at_price
    };

    if (window.Currency && ira.cache.$headerCurrencyConverter.length) {
      formattablePrices = {
        regular: Currency.convert(variant.price, defaultCurrency, Currency.currentCurrency),
        compare_at: Currency.convert(variant.compare_at_price, defaultCurrency, Currency.currentCurrency)
      };
    };

    // Regardless of stock, update the product price

    $productPrice.html( Shopify.formatMoney(formattablePrices.regular, moneyFormat) );

    // Also update and show the product's compare price if necessary
    if (formattablePrices.compare_at > formattablePrices.regular) {
      $comparePrice
        .html(Shopify.formatMoney(formattablePrices.compare_at, moneyFormat))
        .show();
    } else {
      $comparePrice.hide();
    }

  } else {
    // The variant doesn't exist, disable submit button.
    // This may be an error or notice that a specific variant is not available.
    // To only show available variants, implement linked product options:
    //   - http://docs.shopify.com/manual/configuration/store-customization/advanced-navigation/linked-product-options
    $addToCart.addClass('disabled').prop('disabled', true);
    $addToCartText.html({{ 'products.product.unavailable' | t | json }});
    $quantityElements.hide();
  }
};


/**
 * Product page
 */
var ProductPage = function() {
  var _this = this;

  this.product = $("#product-outer-container");

  if (!this.product.length) return;

  // I don't know why we're doing this
  if (navigator.appVersion.indexOf("MSIE 8") > 0) {
    return console.log('no thanks ie8');
  };

  new Shopify.OptionSelectors('productSelect', {
    product: JSON.parse(this.product.attr('data-product')),
    onVariantSelected: this.selectCallback.bind(this),
    enableHistoryState: true
  });

  $('#ProductPhotoSlideshow').slick({
    dots: true,
    arrows: false,
    mobileFirst: true,
    respondTo: 'min',
    adaptiveHeight: true,
    pauseOnHover: false,
    draggable: true,
    lazyload: 'progressive',
  }).init(function() {
    var imagePosition = _this.product.attr('data-initial-image-position');

    if (imagePosition) {
      $('#ProductPhotoSlideshow').slick('slickGoTo', imagePosition, false);
    }
  });

  // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
  if (Number(this.product.attr('data-product-options-size')) == 1 && this.product.attr('data-product-options-first') != 'Title') {
    $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">' + this.product.attr('data-product-options-first') + '</label>');
  };

  // Hide selectors if we only have 1 variant and its title contains 'Default'.
  if (Number(this.product.attr('data-product-variants-size')) == 1 && this.product.attr('data-product-variants-first').indexOf('Default') !== -1) {
    $('.selector-wrapper').hide();
  };

  this.initFitVids();
  this.setupTabs();
  this.extendTab();
  this.switchTabs();
  this.openLightbox();
  this.closeLightbox();
  this.addLabelsToSelectTags();

  $(window).on('widthChange', _.debounce(this.setupTabs, 50));
};

ProductPage.prototype.initFitVids = function() {
  var $vid = this.product.find('iframe');

  if ($vid.length) {
    $vid.fitVids();
  }
};

ProductPage.prototype.selectCallback = function(variant, selector) {
  if (!variant) return;

  ira.productPage({
    money_format: this.product.attr('data-money-format'),
    default_currency: this.product.attr('data-shop-default-currency'),
    variant: variant,
    selector: selector
  });

  if (variant.featured_image) {
    this.gotoSlide(variant.featured_image);
    this.updateVariantImage(variant.featured_image);
  }
};

ProductPage.prototype.openLightbox = function() {
  $('[data-product-lightbox-button="open"]').on('click', function() {
    ira.cache.$body.addClass('no-scroll');
    $('[data-product-lightbox]').addClass('active');
  });
}

ProductPage.prototype.closeLightbox = function() {
  $('[data-product-lightbox-button="close"]').on('click', function() {
    ira.cache.$body.removeClass('no-scroll');
    $('[data-product-lightbox]').removeClass('active');
  });
}

ProductPage.prototype.setupTabs = function() {
  var $tab = $('[data-product-tab]'),
      $content = $('[data-product-tab-content]');

  $tab.removeClass('inactive');
  $content
    .height('auto')
    .removeClass('truncated');
  $content.children('[data-product-tab-content-inner]')
    .height('auto')
    .removeClass('truncated');

  setTimeout(function() {
    $content.each(function(i, el) {
      var $el = $(el);
      var $parent = $el.closest('[data-product-tab]'),
          $inner = $el.children('[data-product-tab-content-inner]');

      $el.imagesLoaded(function() {
        var height = $el.height(),
            innerHeight = $inner.height();

        if (innerHeight > 400) {
          $inner
            .addClass('truncated')
            .height(innerHeight);

          $el.height('auto').addClass('truncated');
        } else {
          $parent
            .find('[data-read-more]')
            .remove();

          $el.height($el.height()).addClass('truncated');
        }

        $parent.toggleClass('inactive', !$parent.hasClass('active'));
      });
    });
  }, 10);
};

ProductPage.prototype.extendTab = function() {
  $('[data-product-tab]').on('click', '[data-read-more]', function(event) {
    var $target = $(event.currentTarget);
    var oldText = $target.text(),
        newText = $target.data('read-more');

    $target.closest('[data-product-tab]').find('[data-product-tab-content-inner]').toggleClass('truncated');

    $target
      .text(newText)
      .data('read-more', oldText);

    $(window).trigger('tab-extended');
  });
};

ProductPage.prototype.switchTabs = function() {
  $('[data-product-tab]').on('click', '[data-product-tab-title]', function() {
    var $this = $(this);
    var $parent = $this.closest('[data-product-tab]');
    var $sibs = $parent.siblings();

    $(window).trigger('tab-changed');

    if ($parent.hasClass('active')) {
      $parent
        .removeClass('active')
        .addClass('inactive');
    } else if ($sibs.hasClass('active')) {
      $sibs
        .removeClass('active')
        .addClass('inactive');

      $parent
        .removeClass('inactive')
        .addClass('active');

      setScrollTop($parent);
    } else {
      $parent
        .removeClass('inactive')
        .addClass('active');

      setScrollTop($parent);
    }
  });

  var setScrollTop = function($parent) {
    if (ira.cache.$productSidebar.hasClass('sticky-sidebar')) return;
    var offset = $('[data-sticky-header="true"]').length ? $('[data-sticky-header]').height() - 1 : 0;
    setTimeout(function() {
      var parentTop = Math.ceil($parent[0].getBoundingClientRect().top),
          bodyTop = Math.ceil($(document.body)[0].getBoundingClientRect().top);
      $(document.body).animate({
        scrollTop: parentTop - bodyTop - offset + 'px'
      }, 150);
    }, 100);
  }
};

ProductPage.prototype.addLabelsToSelectTags = function() {
  var _this = this;
  var selects = $('.selector-wrapper');
  selects.each(this.addInitialLabelToSelect.bind(this));
  this.addLabelToQuantityInput();
  $('.selector-wrapper select').on('change', function(e){
    selects.each(_this.updateLabel.bind(_this));
  });
};

ProductPage.prototype.updateLabel = function(i, e) {
  var select, labelText, textOverlay;
  labelText = $(e).find('label:first').text();
  select = $(e).find('select:first');
  textOverlay = $(e).find('.select-overlay:first');
  textOverlay.html('<strong>' + labelText + "</strong>: " + select.val());
  // hack from this stack overflow post to force a repaint on the element
  // http://stackoverflow.com/questions/7840384/select-inputs-not-responding-in-android-mobile-browser
  select.attr("forceRePaint", "yes");
};

ProductPage.prototype.addInitialLabelToSelect = function(i, e) {
  var label, select, labelText, textOverlay, transparentColor;
  label = $(e).find('label:first');
  select = $(e).find('select:first');

  if (label.is(':visible')){
    labelText = label.text();
    label.hide();

    select.css('color', 'rgba(0, 0, 0, 0)');
    textOverlay = $('<div class="select-overlay">');
    textOverlay.html('<strong>' + labelText + "</strong>: " + select.val());
    $(e).prepend(textOverlay);
  }
};

ProductPage.prototype.addLabelToQuantityInput = function() {
  $('.quantity-selector').wrapAll('<div class="quantity-wrapper">');
  var input = $('#Quantity');
  var label = $('label.quantity-selector');

  label.css({
    'position' : 'absolute',
  });

  label.wrap("<strong>");
  label.text(label.text() + ": ");

  input.css({
    'paddingLeft' : label.outerWidth() + 5,
  })

  $(window).on('resize', function(){
    input.css({
      'paddingLeft' : label.outerWidth() + 5,
    });
  });
};

ProductPage.prototype.updateVariantImage = function(image) {
  if ($('[data-product-images="stacked"]').length) {
    ira.switchImage(image.src, null, $('#ProductPhoto'), true, image.position);
  } else {
    ira.switchImage(image.src, null, $('#ProductPhotoImg'));
  }
}

ProductPage.prototype.gotoSlide = function(image) {
  if (image) {
    var $slideshow = $('#ProductPhotoSlideshow');

    if ($('.slick-initialized').length) {
      $slideshow.slick('slickGoTo', image.position - 1, false);
    }
  }
};



$(document).ready(function(event) {
      ira.productImageSwitch();
      ira.productSidebar();
      new ProductPage();
  })

$(bt_product.init);